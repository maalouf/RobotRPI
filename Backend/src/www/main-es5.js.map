{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/components/choice/choice.component.ts","webpack:///src/components/choice/choice.component.html","webpack:///src/components/components.module.ts","webpack:///src/components/gamepad/gamepad.component.ts","webpack:///src/components/home-page/home-page.component.ts","webpack:///src/components/home-page/home-page.component.html","webpack:///src/components/password-dialog/password-dialog.component.ts","webpack:///src/components/password-dialog/password-dialog.component.html","webpack:///src/components/status/status.component.ts","webpack:///src/components/status/status.component.html","webpack:///src/components/wifi-selector/wifi-selector.component.ts","webpack:///src/components/wifi-selector/wifi-selector.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/share/rpi-connector.service.ts","webpack:///src/share/share.module.ts","webpack:///src/share/svg-icon-loading.service.ts","webpack:///src/share/system-status.service.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","iconService","iconToLoad","folderIcon","title","loadIconsArray","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChoiceComponent","systemStatus","rpi","route","zone","status","wifi","accessPoint","ip","undefined","stength","battery","gamePad","subs","forEach","x","unsubscribe","Array","ipServer","push","onSystemChangeIP","subscribe","stat","onsystemChanheInfo","isConnected","localStorage","setItem","setCurrentIp","run","navigate","setAccessPoint","apIP","setIp","gotoWifi","makeAP","drive","ComponentsModule","GamepadComponent","statusService","subscription","socket","disconnect","mapping","Map","set","data","console","log","url","concat","options","window","addEventListener","gamepad","buttons","value","axis","leftXAxis","leftYAxis","rightXAxis","rightYAxis","buildMapping","runOutsideAngular","requestAnimationFrame","queryPadKeys","bind","nb","parseFloat","toFixed","axes","lxAxis","roundNumber","lyAxis","rxAxis","ryAxis","dirty","emit","buts","buttonsState","index","buttonChanged","changed","label","get","state","pressed","clicked","length","indok","findIndex","button","gp","navigator","getGamepads","handleAxes","handleButtons","HomePageComponent","router","srcImg","inFullScreen","element","fullscreenContainer","nativeElement","classList","contains","requestFullScreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","call","add","doc","document","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","remove","PasswordDialogComponent","dialogRef","showError","password","error","close","ok","cancel","StatusComponent","WifiSelectorComponent","rpiService","dialog","showSpin","wifiList","scanAvailableWifi","fetchData","quality","vals","split","strength","parseInt","max","block","Math","min","floor","toString","connectToSSID","ssid","mac","r","setTimeout","encrypted","open","afterClosed","res","hasOwnProperty","connectWifi","refresh","environment","production","serverURL","bootstrapModule","err","RpiConnectorService","http","statusServer","rpiURL","post","username","providedIn","ShareModule","SvgIconLoadingService","iconRegistry","sanitizer","loadedIcons","name","addSvgIcon","icons","folder","icon","bypassSecurityTrustResourceUrl","includes","SystemStatusService","latest","extractURL","systemStatIP","systemStatInfo","currentIP","checkCurrentIP","location","href","str","indexOf","end","substring","fromEvent","next","controleSignal","controlBatt","signal","time","batt"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {WifiSelectorComponent} from 'components/wifi-selector/wifi-selector.component'\nimport {HomePageComponent} from 'components/home-page/home-page.component'\nimport {ChoiceComponent} from 'components/choice/choice.component'\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChoiceComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'home',\n    component: HomePageComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'scanWifi',\n    component: WifiSelectorComponent,\n    pathMatch: 'full',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,OnInit } from '@angular/core';\nimport {SvgIconLoadingService} from 'share/svg-icon-loading.service'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  private iconToLoad : Array<string> = ['wifi','wifi1','wifi2','wifi3','wifi4','wifi5'];\n  private folderIcon : string = '../assets/icons'\n  title = 'robotFront';\n  constructor(private iconService : SvgIconLoadingService) {}\n\n  ngOnInit() {\n    this.iconService.loadIconsArray(this.iconToLoad,this.folderIcon);\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ComponentsModule} from '../components/components.module'\nimport {ShareModule} from 'share/share.module';\nimport { FlexLayoutModule }            from '@angular/flex-layout';\n\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    ShareModule,\n    ComponentsModule,\n    HttpClientModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,NgZone,OnDestroy } from '@angular/core';\nimport {SystemStatus, SystemStatusService} from 'share/system-status.service';\nimport {RpiConnectorService} from 'share/rpi-connector.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-choice',\n  templateUrl: './choice.component.html',\n  styleUrls: ['./choice.component.css']\n})\nexport class ChoiceComponent implements OnInit, OnDestroy{\n  status : SystemStatus = {wifi:false,accessPoint:false,ip:undefined,stength:0,battery :0,gamePad:false};\n  isConnected : boolean;\n  ipServer : string;\n  private subs : Array<any>;\n  constructor(private systemStatus : SystemStatusService, private rpi : RpiConnectorService,\n  private route : Router,private zone: NgZone) { }\n  ngOnDestroy(): void {\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.subs = new Array<any>();\n    this.ipServer = \"\";\n    this.subs.push(this.systemStatus.onSystemChangeIP().subscribe(stat => {\n      this.status = stat;\n    }));\n    this.subs.push(this.systemStatus.onsystemChanheInfo().subscribe(stat => {\n      this.status = stat;\n      this.isConnected = this.status.wifi || this.status.accessPoint;\n      if (this.status.ip !== undefined){\n        localStorage.setItem('latestRobot',this.status.ip);\n        this.ipServer = this.status.ip;\n      }\n    }));\n  }\n\n  setIp(){\n    this.systemStatus.setCurrentIp(this.ipServer);\n  }\n\n  gotoWifi(){\n    this.zone.run(()=> {\n      this.route.navigate(['scanWifi']);\n    })\n  }\n  makeAP(){\n    this.rpi.setAccessPoint().subscribe(()=>{});\n    this.ipServer = this.systemStatus.apIP;\n    this.setIp();\n  }\n  drive(){\n    this.zone.run(()=> {\n      this.route.navigate(['home'])\n    })\n  }\n\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\" >\n  <app-status class=\"status\" ></app-status>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>Server IP</mat-label>\n      <input matInput [(ngModel)]=\"ipServer\">\n    </mat-form-field>\n    <button mat-icon-button color=\"primary\" (click)=\"setIp()\">\n      <mat-icon>cached</mat-icon>\n    </button>\n  </div>\n  <div class=\"butts\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"5px\">\n\n    <button mat-raised-button color=\"primary\" [disabled]=\"!isConnected\" (click)=\"gotoWifi()\">\n      Connect to WIFI\n    </button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"!status.wifi\" (click)=\"makeAP()\">\n      Make Access Point\n    </button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"!isConnected\" (click)=\"drive()\">\n      Drive Robot\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WifiSelectorComponent } from './wifi-selector/wifi-selector.component';\nimport {MatListModule}          from '@angular/material/list'\nimport {MatIconModule}          from '@angular/material/icon'\nimport { FlexLayoutModule }            from '@angular/flex-layout';\nimport {MatButtonModule}          from '@angular/material/button'\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { PasswordDialogComponent } from './password-dialog/password-dialog.component';\nimport {MatInputModule}          from '@angular/material/input'\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport { FormsModule } from '@angular/forms';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { GamepadComponent } from './gamepad/gamepad.component';\nimport { ChoiceComponent } from './choice/choice.component';\nimport { StatusComponent } from './status/status.component';\n\n@NgModule({\n  declarations: [WifiSelectorComponent, PasswordDialogComponent, HomePageComponent, GamepadComponent, ChoiceComponent, StatusComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatCardModule,\n    MatProgressBarModule\n\n  ],\n  \"entryComponents\":[\n    PasswordDialogComponent\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, OnInit,NgZone,OnDestroy} from '@angular/core';\nimport { Socket }                 from 'ngx-socket-io'\nimport {SystemStatusService} from 'share/system-status.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-gamepad',\n  templateUrl: './gamepad.component.html',\n  styleUrls: ['./gamepad.component.css']\n})\nexport class GamepadComponent implements OnInit,OnDestroy {\n  private socket : Socket;\n  private gamepad : Gamepad;\n  private axis : Axis;\n  private buttons : Array<number>;\n  private mapping : Map<number,string>;\n  private url : string;\n  private subscription : any;\n  constructor(private zone : NgZone, private statusService: SystemStatusService,private route: Router) { }\n  ngOnDestroy(): void {\n    if (this.subscription) this.subscription.unsubscribe();\n    this.socket.disconnect();\n    this.socket = undefined;\n  }\n  buildMapping(){\n    this.mapping = new Map<number,string>();\n    this.mapping.set(12,\"crossUp\");\n    this.mapping.set(13,\"crossDown\");\n    this.mapping.set(14,\"crossLeft\");\n    this.mapping.set(15,\"crossRight\");\n    this.mapping.set(2,\"X\");\n    this.mapping.set(3,\"Y\");\n    this.mapping.set(0,\"A\");\n    this.mapping.set(1,\"B\");\n    this.mapping.set(9,\"start\");\n    this.mapping.set(8,\"select\");\n    this.mapping.set(10,\"leftAxisClick\");\n    this.mapping.set(11,\"rightAxisClick\");\n    this.mapping.set(4,\"L\");\n    this.mapping.set(6,\"L2\");\n    this.mapping.set(5,\"R\");\n    this.mapping.set(7,\"R2\");\n  }\n  ngOnInit(): void {\n    this.subscription = this.statusService.onSystemChangeIP().subscribe(data => {\n      if (data.ip !== undefined){\n        console.log(\"miaou\",data.ip)\n        this.url = \"https://\".concat(data.ip,':8080');\n        if (this.socket !== undefined) this.socket = undefined;\n        this.socket = new Socket({url:this.url.concat(\"/robot\"),options:{}});\n      }\n    });\n\n    window.addEventListener(\"gamepadconnected\",(e:any) => {\n      console.log(e);\n      this.gamepad = e.gamepad;\n      this.buttons = new Array<number>();\n      e.gamepad.buttons.forEach((x:GamepadButton) => {\n        this.buttons.push(x.value);\n      });\n      this.axis = {leftXAxis:0.0,leftYAxis:0.0,rightXAxis:0.0,rightYAxis:0.0};\n      this.buildMapping();\n    });\n    window.addEventListener(\"gamepaddisconnected\", function(e) {\n      console.log(\"Gamepad disconnected\")\n      this.gamepad = undefined;\n    });\n\n    this.zone.runOutsideAngular(()=> {\n      window.requestAnimationFrame(this.queryPadKeys.bind(this));\n    })\n  }\n\n  private roundNumber(nb : number) : number {\n    return parseFloat(nb.toFixed(1));\n  }\n\n  private handleAxes(axes : Readonly<Array<number>>){\n    let lxAxis = this.roundNumber(axes[0]);\n    let lyAxis = this.roundNumber(axes[1]);\n    let rxAxis = this.roundNumber(axes[2]);\n    let ryAxis = this.roundNumber(axes[3]);\n    let dirty : boolean = false;\n    if (this.axis.leftXAxis !== lxAxis){\n      this.axis.leftXAxis = lxAxis;\n      dirty = true;\n    }\n    if (this.axis.rightXAxis !== rxAxis){\n      this.axis.rightXAxis = rxAxis;\n      dirty = true;\n    }\n    if (this.axis.leftYAxis !== lyAxis){\n      this.axis.leftYAxis = lyAxis;\n      dirty = true;\n    }\n    if (this.axis.rightYAxis !==ryAxis){\n      this.axis.rightYAxis = ryAxis;\n      dirty = true;\n    }\n    if (dirty && this.socket!==undefined){\n      this.socket.emit(\"gamepad\",{id:\"axis\",data:this.axis})\n    }\n  }\n\n  private handleButtons(buts : Readonly<Array<GamepadButton>>){\n    let buttonsState = {\"changed\":[],\"clicked\":[]};\n    buts.forEach((x,index) => {\n      if (this.buttonChanged(x,index)){\n        buttonsState.changed.push({id:index,label:this.mapping.get(index),state:x.value});\n      }\n      if (x.pressed){\n        buttonsState.clicked.push({id:index,label:this.mapping.get(index),state:x.value});\n      }\n    });\n    if (buttonsState.changed.length > 0 && this.socket !== undefined){\n      console.log(buttonsState.changed)\n      this.socket.emit(\"gamepad\",{id:\"buttonsChanged\",data:buttonsState.changed});\n    }\n    if (buttonsState.clicked.length > 0){\n    //  this.socket.emit(\"gamepad\",{id:\"buttonsKeepClicked\",data:buttonsState.clicked});\n    }\n    let indok = buttonsState.changed.findIndex(x => x.label == \"start\");\n    if (indok >= 0){\n      this.zone.run(()=> {\n        this.route.navigate([\"\"]);\n      })\n    }\n  }\n\n  private buttonChanged(button:GamepadButton, index: number): boolean {\n    if (button.value !== this.buttons[index]){\n      this.buttons[index] = button.value;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  queryPadKeys(){\n    if (this.gamepad !== undefined){\n      let gp = navigator.getGamepads()[this.gamepad.index];\n      this.handleAxes(gp.axes);\n      this.handleButtons(gp.buttons);\n    }\n    window.requestAnimationFrame(this.queryPadKeys.bind(this));\n  }\n\n}\n\nexport interface Axis {\n  leftXAxis : number;\n  leftYAxis : number;\n  rightXAxis : number;\n  rightYAxis : number;\n}\n","import { Component, OnInit,NgZone,ViewChild, ElementRef,OnDestroy } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SystemStatusService, SystemStatus} from \"share/system-status.service\"\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit,OnDestroy {\n  srcImg = \"http://192.168.0.16:4000/stream.jpg\";\n  isInControle : boolean;\n  private subs: any;\n  inFullScreen : boolean;\n  status : SystemStatus;\n  battery : number;\n  showMenu: boolean;\n@ViewChild('fullscreenContainer',{static:false}) fullscreenContainer : ElementRef;\n  constructor(private router:Router,private statusService : SystemStatusService) { }\n  ngOnDestroy(): void {\n    if (this.subs) this.subs.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.inFullScreen = false;\n    this.subs = this.statusService.onSystemChangeIP().subscribe(data => {\n      if (data.ip !== undefined){\n        this.srcImg = \"http://\"+data.ip+\":4000/stream.jpg\";\n      }\n    });\n    this.statusService.onsystemChanheInfo().subscribe(data => {\n      this.status = data;\n      this.battery = ((data.battery - 7) * 100)/4.1;\n    })\n  }\n\n  fullscreen(){\n    let element = this.fullscreenContainer.nativeElement;\n    if (element.classList.contains('fullscreen')) {\n      return;\n    }\n    let requestFullScreen = element.requestFullscreen\n    || element.msRequestFullscreen\n    || element.mozRequestFullScreen\n    || element.webkitRequestFullscreen;\n\n    if (requestFullScreen) {\n      requestFullScreen.call(element);\n    }\n    element.classList.add(\"fullscreen\");\n    this.inFullScreen = true;\n  }\n\n  exitFullscreen() {\n    let doc = <any>document;\n    let element = this.fullscreenContainer.nativeElement;\n    if(!element.classList.contains('fullscreen')) {\n      return;\n    }\n    let exitFullscreen = doc.exitFullscreen\n    || doc.webkitExitFullscreen\n    || doc.mozCancelFullScreen\n    || doc.msExitFullscreen;\n\n    if (exitFullscreen) {\n      exitFullscreen.call(doc);\n    }\n    // Failover for IOS\n    element.classList.remove(\"fullscreen\");\n    this.inFullScreen = false;\n  }\n\n\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\" fxLayoutGap='10px'>\n  <div class=\"block\" #fullscreenContainer id=\"fullscreenContainer\">\n    <div fxLayout=\"row\" class=\"menue\">\n      <button mat-mini-fab class=\"menuButton\" (click)=\"showMenu = !showMenu\">\n        <mat-icon>settings</mat-icon>\n      </button>\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"menuBlock\" fxLayoutGap='10px' *ngIf=\"showMenu\">\n        <button *ngIf=\"inFullScreen\" mat-mini-fab (click)=\"exitFullscreen()\">\n          <mat-icon>fullscreen_exit</mat-icon>\n        </button>\n        <button *ngIf=\"!inFullScreen\" mat-mini-fab (click)=\"fullscreen()\">\n          <mat-icon>fullscreen</mat-icon>\n        </button>\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"status.wifi\">\n          <p>Wifi: </p> <mat-progress-bar mode=\"determinate\" [value]=\"status.stength\" class=\"largepb status\"></mat-progress-bar>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <p>Battery: </p> <mat-progress-bar mode=\"determinate\" [value]=\"battery\" class=\"largepb status\"></mat-progress-bar>\n          <p style=\"margin-left:3px;\">{{status.battery}}V</p>\n        </div>\n      </div>\n    </div>\n    <img [src]=\"srcImg\" class=\"imagerpi\">\n  </div>\n</div>\n<app-gamepad></app-gamepad>\n","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n@Component({\n  selector: 'app-password-dialog',\n  templateUrl: './password-dialog.component.html',\n  styleUrls: ['./password-dialog.component.css']\n})\nexport class PasswordDialogComponent implements OnInit {\n  public password : string;\n  public error : string;\n  public showError : boolean = false;\n  ngOnInit(): void {\n    this.password = \"\";\n    this.showError = false;\n  }\n\n  constructor(private dialogRef: MatDialogRef<PasswordDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  public ok(){\n    if (this.password.length == 0) {\n      this.error = \"Please enter password...\"\n      this.showError = true;\n    } else {\n      this.dialogRef.close({\"password\":this.password});\n    }\n  }\n\n  public cancel(){\n    this.dialogRef.close({});\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n  <span> Enter Password for {{data.ssid}} </span>\n  <mat-form-field>\n   <input matInput type=\"password\" [(ngModel)]=\"password\">\n </mat-form-field>\n <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10%\">\n   <button mat-raised-button color=\"primary\" (click)=\"ok()\">Connect</button>\n   <button mat-raised-button color=\"accent\" (click)=\"cancel()\">Cancel</button>\n </div>\n <p style=\"color:red;\">{{error}}</p>\n</div>\n","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport {SystemStatus, SystemStatusService} from 'share/system-status.service';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit ,OnDestroy{\n  status: SystemStatus;\n  private subs : Array<any>;\n  battery : number;\n  constructor(private systemStatus : SystemStatusService) { }\n  ngOnDestroy(): void {\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.subs = new Array<any>();\n    this.battery = 0;\n    this.subs.push(this.systemStatus.onSystemChangeIP().subscribe(stat => {\n      this.status = stat;\n    }));\n    this.subs.push(this.systemStatus.onsystemChanheInfo().subscribe(stat => {\n      this.status = stat;\n      this.battery = ((stat.battery - 7) * 100)/4.1;\n    }));\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"50px\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <mat-icon [ngClass]=\"{'onclass':(status.wifi || status.accessPoint),\n      'offclass':!(status.wifi || status.accessPoint)}\">lens</mat-icon>\n      <p class=\"status\"> {{(status.wifi || status.accessPoint)?\"Connected\":\"Disconnected\"}}</p>\n    </div>\n    <p *ngIf=\"(status.wifi || status.accessPoint)\"> system is {{(status.wifi)?\"Wifi network\":\"Access Point\"}} </p>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"50px\">\n  <p>Used server IP:</p><p> {{status.ip}}</p>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between \" fxLayoutGap=\"30px\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" *ngIf=\"status.wifi\">\n      <p>Wifi Power: </p> <mat-progress-bar mode=\"determinate\" [value]=\"status.stength\" class=\"largepb status\"></mat-progress-bar>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <p>Battery: </p> <mat-progress-bar mode=\"determinate\" [value]=\"battery\" class=\"largepb status\"></mat-progress-bar>\n      <p>{{status.battery}}V</p>\n    </div>\n</div>\n","import { Component, OnInit,NgZone } from '@angular/core';\nimport {RpiConnectorService} from 'share/rpi-connector.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {PasswordDialogComponent} from 'components/password-dialog/password-dialog.component';\nimport { Router }  from '@angular/router';\n\n\n@Component({\n  selector: 'app-wifi-selector',\n  templateUrl: './wifi-selector.component.html',\n  styleUrls: ['./wifi-selector.component.css']\n})\nexport class WifiSelectorComponent implements OnInit {\n  public showSpin: boolean = true;\n  constructor(private rpiService : RpiConnectorService, private dialog : MatDialog,\n  private zone: NgZone, private router: Router) {}\n  public wifiList : Array<ScanData> = new Array<ScanData>();\n\n  private fetchData(){\n    this.showSpin = true;\n    this.rpiService.scanAvailableWifi().subscribe((data:Array<ScanData>)=> {\n      this.wifiList = data;\n      this.showSpin = false;\n    });\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n\n  public refresh() {\n    this.fetchData();\n  }\n\n  public getSignalStrength(quality : string) : string {\n    let vals = quality.split('/');\n    let strength = parseInt(vals[0]);\n    let max = parseInt(vals[1]);\n    let block = max / 6;\n    strength = Math.min(Math.floor(strength / block),5);\n    if (strength == 0){\n      return 'wifi';\n    } else {\n      return 'wifi'.concat(strength.toString());\n    }\n\n  }\n\n  private connectWifi(wifi:ScanData, password:string){\n    this.rpiService.connectToSSID(wifi.ssid,wifi.mac,password).subscribe(r => {\n      setTimeout((()=> {\n        this.zone.run(()=>{\n          this.router.navigate(['choice']);\n        })\n      }).bind(this),100);\n    });\n\n  }\n\n  public selected(wifi : ScanData){\n    console.log(wifi)\n    if (wifi.encrypted){\n      let dialogRef = this.dialog.open(PasswordDialogComponent,{data:{ssid:wifi.ssid}});\n      dialogRef.afterClosed().subscribe((res:any) => {\n        if (res.hasOwnProperty(\"password\")){\n          this.connectWifi(wifi,res.password);\n        }\n      })\n    } else {\n      this.connectWifi(wifi,undefined);\n    }\n  }\n\n}\n\nexport interface ScanData {\n  \"mac\": string;\n  \"ssid\": string;\n  \"quality\": string;\n  \"signal_level\": number;\n  \"encrypted\": boolean;\n  \"Channel\": number;\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\" >\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"title\">\n    <h1 class=\"refresh\"> Select Network </h1>\n    <button mat-icon-button color=\"primary\" (click)=\"refresh()\">\n      <mat-icon class=\"refresh\">refresh</mat-icon>\n    </button>\n  </div>\n  <mat-list class=\"list\">\n    <mat-list-item *ngFor=\"let wifi of wifiList\">\n      <div (click)=\"selected(wifi)\" class=\"line\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <div fxLayoutGap=\"5px\">\n            <mat-icon>wifi</mat-icon>\n            <span class=\"ssidName\">{{wifi.ssid}}</span>\n          </div>\n          <div fxLayoutGap=\"5px\" >\n            <span> {{wifi.signal_level}}db </span>\n            <mat-icon [svgIcon]=\"getSignalStrength(wifi.quality)\"></mat-icon>\n            <mat-icon>{{(wifi.encrypted)?'lock':'lock_open'}}</mat-icon>\n          </div>\n        </div>\n      </div>\n      <mat-divider></mat-divider>\n    </mat-list-item>\n  </mat-list>\n  <mat-spinner *ngIf=\"showSpin\" class=\"spinner\" color=\"primary\"></mat-spinner>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverURL: 'https://192.168.44.1:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ScanData} from 'components/wifi-selector/wifi-selector.component'\nimport { HttpClient}  from '@angular/common/http';\nimport {SystemStatusService} from 'share/system-status.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RpiConnectorService {\n  private rpiURL : string;\n  constructor(private http: HttpClient, private statusServer: SystemStatusService) {\n    this.statusServer.onSystemChangeIP().subscribe(res => {\n      if (res.ip !== undefined){\n        this.rpiURL = \"https://\".concat(res.ip,':8080');\n      }\n    });\n  }\n\n  public getRpiURL() : string {\n    return this.rpiURL;\n  }\n\n  public setRpiUrl(url : string){\n    this.rpiURL = url;\n  }\n\n  public scanAvailableWifi() : Observable<Array<ScanData>> {\n    return this.http.get<Array<ScanData>>(this.rpiURL.concat('/scanWifi'));\n  }\n\n  public connectToSSID(ssid:string,mac:string,password:string){\n    return this.http.post(this.rpiURL.concat('/setWifi'),{\"ssid\":ssid,\"mac\":mac,\"password\":password});\n  }\n\n  public setAccessPoint(){\n    return this.http.get(this.rpiURL.concat('/setAP'),{});\n  }\n\n  public startSession(username: string,password:string) : Observable<any> {\n    return this.http.post(this.rpiURL.concat('/startSession'),\n    {\"user\":username,\"password\":password});\n  }\n\n  public isActiveSession() : Observable<{status:boolean}> {\n    return this.http.get<{status:boolean}>(this.rpiURL.concat('/isActiveSession'));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule }            from '@angular/flex-layout';\nimport { FormsModule,\n\t ReactiveFormsModule }         from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule}          from '@angular/material/input'\nimport {MatProgressBarModule} from '@angular/material/progress-bar'\nimport {MatIconModule}          from '@angular/material/icon'\nimport {MatButtonModule}          from '@angular/material/button'\nimport {MatCardModule}          from '@angular/material/card'\nimport {MatCheckboxModule}          from '@angular/material/checkbox'\nimport {MatToolbarModule}          from '@angular/material/toolbar'\nimport {MatListModule}          from '@angular/material/list'\nimport {MatMenuModule}          from '@angular/material/menu'\nimport {MatSelectModule}          from '@angular/material/select'\nimport {MatDialogModule}          from '@angular/material/dialog'\nimport {MatExpansionModule}          from '@angular/material/expansion'\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n\t\tBrowserAnimationsModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatExpansionModule,\n\t\tMatProgressBarModule,\n\t\tMatSlideToggleModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n\t\tMatProgressBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n\t\tBrowserAnimationsModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatExpansionModule,\n\t\tMatSlideToggleModule\n  ]\n})\nexport class ShareModule { }\n","/**\n * @Author: maalouf\n * @Date:   2019-09-23T11:47:23+02:00\n * @Last modified by:   maalouf\n * @Last modified time: 2019-09-23T14:09:59+02:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon'\nimport {DomSanitizer} from '@angular/platform-browser'\n@Injectable({\n  providedIn: 'root'\n})\nexport class SvgIconLoadingService {\n  private loadedIcons : Array<string>;\n  constructor(private iconRegistry : MatIconRegistry, private sanitizer : DomSanitizer) {\n    this.loadedIcons = new Array<string>();\n  }\n\n  public loadIcon(name:string,url:string){\n    this.iconRegistry.addSvgIcon(name,url);\n    this.loadedIcons.push(name);\n  }\n\n  public loadIconsArray(icons : Array<string>,folder: string){\n\n    icons.forEach( icon => {\n      let path = folder.concat('/',icon,'.svg');\n      this.loadedIcons.push(icon);\n      this.iconRegistry.addSvgIcon(icon,this.sanitizer.bypassSecurityTrustResourceUrl(path));\n    })\n  }\n\n  public isSvgLoaded(icon: string): boolean {\n    return this.loadedIcons.includes(icon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs'\nimport { Socket } from 'ngx-socket-io'\nimport { HttpClient}  from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SystemStatusService {\n  private systemStatIP : BehaviorSubject<SystemStatus>;\n  private systemStatInfo : BehaviorSubject<SystemStatus>;\n\n  private status : SystemStatus;\n  private socket : Socket;\n\n  private currentIP: string;\n  public apIP = \"192.168.44.1\";\n\n  constructor(private http: HttpClient) {\n    console.log(\"repwetwet\")\n    this.status = {wifi : false,accessPoint : false,ip : undefined,\n      battery : 0, stength:0, gamePad: false};\n\n    let latest = this.extractURL();\n    this.systemStatIP = new BehaviorSubject<SystemStatus>(this.status);\n    this.systemStatInfo = new BehaviorSubject<SystemStatus>(this.status);\n    if (latest !== undefined && latest !== null){\n      this.currentIP = latest;\n    } else {\n      this.currentIP = this.apIP;\n    }\n    this.checkCurrentIP();\n  }\n\n  private extractURL(): string {\n    let url = location.href;\n    let str = url.indexOf(\"://\");\n    str = str + 3;\n    let end = url.indexOf(\":\",str);\n    return url.substring(str,end);\n  }\n\n  private checkCurrentIP(){\n    if (this.socket !== undefined){\n      this.socket.disconnect();\n      this.socket = undefined;\n    }\n    let url = \"https://\".concat(this.currentIP,':8080/connectStat')\n    this.socket = new Socket({url:url,options:{}})\n    this.socket.fromEvent(\"connect\").subscribe(()=> {\n      console.log(\"connected\");\n      this.status.ip = this.currentIP;\n      this.status.accessPoint = this.currentIP == this.apIP;\n      this.status.wifi = this.currentIP !== this.apIP;\n      this.systemStatIP.next(this.status);\n      if (this.status.wifi) this.controleSignal();\n      this.controlBatt();\n    })\n  }\n\n  private controleSignal(){\n    this.http.get<any>(\"https://\".concat(this.currentIP,':8080/getSignal')).subscribe(res => {\n      this.status.stength = res.signal;\n      this.systemStatInfo.next(this.status);\n      let time = 120000;\n      if (this.status.stength < 50) time = 60000;\n      if (this.status.stength < 20) time = 30000;\n      setTimeout(this.controleSignal.bind(this), time);\n    });\n  }\n\n  private controlBatt(){\n    this.http.get<any>(\"https://\".concat(this.currentIP,':8080/getBattery')).subscribe(res => {\n      this.status.battery = res.batt;\n      this.systemStatInfo.next(this.status);\n      setTimeout(this.controlBatt.bind(this),120000);\n    });\n  }\n\n  setCurrentIp(ip: string){\n    this.currentIP = ip;\n    this.checkCurrentIP();\n  }\n\n  getSystemStatus(): SystemStatus {\n    return this.status;\n  }\n\n  onSystemChangeIP() : BehaviorSubject<SystemStatus>{\n    return this.systemStatIP;\n  }\n\n  onsystemChanheInfo(): BehaviorSubject<SystemStatus> {\n    return this.systemStatInfo;\n  }\n\n  getRobotIp(): string {\n    return this.status.ip;\n  }\n}\n\nexport interface SystemStatus {\n  wifi : boolean;\n  accessPoint : boolean;\n  ip : string;\n  battery : number;\n  stength: number;\n  gamePad: boolean;\n}\n","/* (ignored) */"]}