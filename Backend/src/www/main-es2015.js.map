{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/components/choice/choice.component.ts","./src/components/choice/choice.component.html","./src/components/components.module.ts","./src/components/gamepad/gamepad.component.ts","./src/components/home-page/home-page.component.ts","./src/components/home-page/home-page.component.html","./src/components/password-dialog/password-dialog.component.ts","./src/components/password-dialog/password-dialog.component.html","./src/components/status/status.component.ts","./src/components/status/status.component.html","./src/components/wifi-selector/wifi-selector.component.ts","./src/components/wifi-selector/wifi-selector.component.html","./src/environments/environment.ts","./src/main.ts","./src/share/rpi-connector.service.ts","./src/share/share.module.ts","./src/share/svg-icon-loading.service.ts","./src/share/system-status.service.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {WifiSelectorComponent} from 'components/wifi-selector/wifi-selector.component'\nimport {HomePageComponent} from 'components/home-page/home-page.component'\nimport {ChoiceComponent} from 'components/choice/choice.component'\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChoiceComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'home',\n    component: HomePageComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'scanWifi',\n    component: WifiSelectorComponent,\n    pathMatch: 'full',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,OnInit } from '@angular/core';\nimport {SvgIconLoadingService} from 'share/svg-icon-loading.service'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  private iconToLoad : Array<string> = ['wifi','wifi1','wifi2','wifi3','wifi4','wifi5'];\n  private folderIcon : string = '../assets/icons'\n  title = 'robotFront';\n  constructor(private iconService : SvgIconLoadingService) {}\n\n  ngOnInit() {\n    this.iconService.loadIconsArray(this.iconToLoad,this.folderIcon);\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ComponentsModule} from '../components/components.module'\nimport {ShareModule} from 'share/share.module';\nimport { FlexLayoutModule }            from '@angular/flex-layout';\n\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    ShareModule,\n    ComponentsModule,\n    HttpClientModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit,NgZone,OnDestroy } from '@angular/core';\nimport {SystemStatus, SystemStatusService} from 'share/system-status.service';\nimport {RpiConnectorService} from 'share/rpi-connector.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-choice',\n  templateUrl: './choice.component.html',\n  styleUrls: ['./choice.component.css']\n})\nexport class ChoiceComponent implements OnInit, OnDestroy{\n  status : SystemStatus = {wifi:false,accessPoint:false,ip:undefined,stength:0,battery :0,gamePad:false};\n  isConnected : boolean;\n  ipServer : string;\n  private subs : Array<any>;\n  constructor(private systemStatus : SystemStatusService, private rpi : RpiConnectorService,\n  private route : Router,private zone: NgZone) { }\n  ngOnDestroy(): void {\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.subs = new Array<any>();\n    this.ipServer = \"\";\n    this.subs.push(this.systemStatus.onSystemChangeIP().subscribe(stat => {\n      this.status = stat;\n    }));\n    this.subs.push(this.systemStatus.onsystemChanheInfo().subscribe(stat => {\n      this.status = stat;\n      this.isConnected = this.status.wifi || this.status.accessPoint;\n      if (this.status.ip !== undefined){\n        localStorage.setItem('latestRobot',this.status.ip);\n        this.ipServer = this.status.ip;\n      }\n    }));\n  }\n\n  setIp(){\n    this.systemStatus.setCurrentIp(this.ipServer);\n  }\n\n  gotoWifi(){\n    this.zone.run(()=> {\n      this.route.navigate(['scanWifi']);\n    })\n  }\n  makeAP(){\n    this.rpi.setAccessPoint().subscribe(()=>{});\n    this.ipServer = this.systemStatus.apIP;\n    this.setIp();\n  }\n  drive(){\n    this.zone.run(()=> {\n      this.route.navigate(['home'])\n    })\n  }\n\n}\n","<div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\" >\n  <app-status class=\"status\" ></app-status>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <mat-form-field class=\"full-width\">\n      <mat-label>Server IP</mat-label>\n      <input matInput [(ngModel)]=\"ipServer\">\n    </mat-form-field>\n    <button mat-icon-button color=\"primary\" (click)=\"setIp()\">\n      <mat-icon>cached</mat-icon>\n    </button>\n  </div>\n  <div class=\"butts\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"5px\">\n\n    <button mat-raised-button color=\"primary\" [disabled]=\"!isConnected\" (click)=\"gotoWifi()\">\n      Connect to WIFI\n    </button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"!status.wifi\" (click)=\"makeAP()\">\n      Make Access Point\n    </button>\n    <button mat-raised-button color=\"primary\" [disabled]=\"!isConnected\" (click)=\"drive()\">\n      Drive Robot\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WifiSelectorComponent } from './wifi-selector/wifi-selector.component';\nimport {MatListModule}          from '@angular/material/list'\nimport {MatIconModule}          from '@angular/material/icon'\nimport { FlexLayoutModule }            from '@angular/flex-layout';\nimport {MatButtonModule}          from '@angular/material/button'\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { PasswordDialogComponent } from './password-dialog/password-dialog.component';\nimport {MatInputModule}          from '@angular/material/input'\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport { FormsModule } from '@angular/forms';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { GamepadComponent } from './gamepad/gamepad.component';\nimport { ChoiceComponent } from './choice/choice.component';\nimport { StatusComponent } from './status/status.component';\n\n@NgModule({\n  declarations: [WifiSelectorComponent, PasswordDialogComponent, HomePageComponent, GamepadComponent, ChoiceComponent, StatusComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatCardModule,\n    MatProgressBarModule\n\n  ],\n  \"entryComponents\":[\n    PasswordDialogComponent\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, OnInit,NgZone,OnDestroy} from '@angular/core';\nimport { Socket }                 from 'ngx-socket-io'\nimport {SystemStatusService} from 'share/system-status.service'\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-gamepad',\n  templateUrl: './gamepad.component.html',\n  styleUrls: ['./gamepad.component.css']\n})\nexport class GamepadComponent implements OnInit,OnDestroy {\n  private socket : Socket;\n  private gamepad : Gamepad;\n  private axis : Axis;\n  private buttons : Array<number>;\n  private mapping : Map<number,string>;\n  private url : string;\n  private subscription : any;\n  constructor(private zone : NgZone, private statusService: SystemStatusService,private route: Router) { }\n  ngOnDestroy(): void {\n    if (this.subscription) this.subscription.unsubscribe();\n    this.socket.disconnect();\n    this.socket = undefined;\n  }\n  buildMapping(){\n    this.mapping = new Map<number,string>();\n    this.mapping.set(12,\"crossUp\");\n    this.mapping.set(13,\"crossDown\");\n    this.mapping.set(14,\"crossLeft\");\n    this.mapping.set(15,\"crossRight\");\n    this.mapping.set(2,\"X\");\n    this.mapping.set(3,\"Y\");\n    this.mapping.set(0,\"A\");\n    this.mapping.set(1,\"B\");\n    this.mapping.set(9,\"start\");\n    this.mapping.set(8,\"select\");\n    this.mapping.set(10,\"leftAxisClick\");\n    this.mapping.set(11,\"rightAxisClick\");\n    this.mapping.set(4,\"L\");\n    this.mapping.set(6,\"L2\");\n    this.mapping.set(5,\"R\");\n    this.mapping.set(7,\"R2\");\n  }\n  ngOnInit(): void {\n    this.subscription = this.statusService.onSystemChangeIP().subscribe(data => {\n      if (data.ip !== undefined){\n        console.log(\"miaou\",data.ip)\n        this.url = \"https://\".concat(data.ip,':8080');\n        if (this.socket !== undefined) this.socket = undefined;\n        this.socket = new Socket({url:this.url.concat(\"/robot\"),options:{}});\n      }\n    });\n\n    window.addEventListener(\"gamepadconnected\",(e:any) => {\n      console.log(e);\n      this.gamepad = e.gamepad;\n      this.buttons = new Array<number>();\n      e.gamepad.buttons.forEach((x:GamepadButton) => {\n        this.buttons.push(x.value);\n      });\n      this.axis = {leftXAxis:0.0,leftYAxis:0.0,rightXAxis:0.0,rightYAxis:0.0};\n      this.buildMapping();\n    });\n    window.addEventListener(\"gamepaddisconnected\", function(e) {\n      console.log(\"Gamepad disconnected\")\n      this.gamepad = undefined;\n    });\n\n    this.zone.runOutsideAngular(()=> {\n      window.requestAnimationFrame(this.queryPadKeys.bind(this));\n    })\n  }\n\n  private roundNumber(nb : number) : number {\n    return parseFloat(nb.toFixed(1));\n  }\n\n  private handleAxes(axes : Readonly<Array<number>>){\n    let lxAxis = this.roundNumber(axes[0]);\n    let lyAxis = this.roundNumber(axes[1]);\n    let rxAxis = this.roundNumber(axes[2]);\n    let ryAxis = this.roundNumber(axes[3]);\n    let dirty : boolean = false;\n    if (this.axis.leftXAxis !== lxAxis){\n      this.axis.leftXAxis = lxAxis;\n      dirty = true;\n    }\n    if (this.axis.rightXAxis !== rxAxis){\n      this.axis.rightXAxis = rxAxis;\n      dirty = true;\n    }\n    if (this.axis.leftYAxis !== lyAxis){\n      this.axis.leftYAxis = lyAxis;\n      dirty = true;\n    }\n    if (this.axis.rightYAxis !==ryAxis){\n      this.axis.rightYAxis = ryAxis;\n      dirty = true;\n    }\n    if (dirty && this.socket!==undefined){\n      this.socket.emit(\"gamepad\",{id:\"axis\",data:this.axis})\n    }\n  }\n\n  private handleButtons(buts : Readonly<Array<GamepadButton>>){\n    let buttonsState = {\"changed\":[],\"clicked\":[]};\n    buts.forEach((x,index) => {\n      if (this.buttonChanged(x,index)){\n        buttonsState.changed.push({id:index,label:this.mapping.get(index),state:x.value});\n      }\n      if (x.pressed){\n        buttonsState.clicked.push({id:index,label:this.mapping.get(index),state:x.value});\n      }\n    });\n    if (buttonsState.changed.length > 0 && this.socket !== undefined){\n      console.log(buttonsState.changed)\n      this.socket.emit(\"gamepad\",{id:\"buttonsChanged\",data:buttonsState.changed});\n    }\n    if (buttonsState.clicked.length > 0){\n    //  this.socket.emit(\"gamepad\",{id:\"buttonsKeepClicked\",data:buttonsState.clicked});\n    }\n    let indok = buttonsState.changed.findIndex(x => x.label == \"start\");\n    if (indok >= 0){\n      this.zone.run(()=> {\n        this.route.navigate([\"\"]);\n      })\n    }\n  }\n\n  private buttonChanged(button:GamepadButton, index: number): boolean {\n    if (button.value !== this.buttons[index]){\n      this.buttons[index] = button.value;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  queryPadKeys(){\n    if (this.gamepad !== undefined){\n      let gp = navigator.getGamepads()[this.gamepad.index];\n      this.handleAxes(gp.axes);\n      this.handleButtons(gp.buttons);\n    }\n    window.requestAnimationFrame(this.queryPadKeys.bind(this));\n  }\n\n}\n\nexport interface Axis {\n  leftXAxis : number;\n  leftYAxis : number;\n  rightXAxis : number;\n  rightYAxis : number;\n}\n","import { Component, OnInit,NgZone,ViewChild, ElementRef,OnDestroy } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SystemStatusService, SystemStatus} from \"share/system-status.service\"\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit,OnDestroy {\n  srcImg = \"http://192.168.0.16:4000/stream.jpg\";\n  isInControle : boolean;\n  private subs: any;\n  inFullScreen : boolean;\n  status : SystemStatus;\n  battery : number;\n  showMenu: boolean;\n@ViewChild('fullscreenContainer',{static:false}) fullscreenContainer : ElementRef;\n  constructor(private router:Router,private statusService : SystemStatusService) { }\n  ngOnDestroy(): void {\n    if (this.subs) this.subs.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.inFullScreen = false;\n    this.subs = this.statusService.onSystemChangeIP().subscribe(data => {\n      if (data.ip !== undefined){\n        this.srcImg = \"http://\"+data.ip+\":4000/stream.jpg\";\n      }\n    });\n    this.statusService.onsystemChanheInfo().subscribe(data => {\n      this.status = data;\n      this.battery = ((data.battery - 7) * 100)/4.1;\n    })\n  }\n\n  fullscreen(){\n    let element = this.fullscreenContainer.nativeElement;\n    if (element.classList.contains('fullscreen')) {\n      return;\n    }\n    let requestFullScreen = element.requestFullscreen\n    || element.msRequestFullscreen\n    || element.mozRequestFullScreen\n    || element.webkitRequestFullscreen;\n\n    if (requestFullScreen) {\n      requestFullScreen.call(element);\n    }\n    element.classList.add(\"fullscreen\");\n    this.inFullScreen = true;\n  }\n\n  exitFullscreen() {\n    let doc = <any>document;\n    let element = this.fullscreenContainer.nativeElement;\n    if(!element.classList.contains('fullscreen')) {\n      return;\n    }\n    let exitFullscreen = doc.exitFullscreen\n    || doc.webkitExitFullscreen\n    || doc.mozCancelFullScreen\n    || doc.msExitFullscreen;\n\n    if (exitFullscreen) {\n      exitFullscreen.call(doc);\n    }\n    // Failover for IOS\n    element.classList.remove(\"fullscreen\");\n    this.inFullScreen = false;\n  }\n\n\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\" fxLayoutGap='10px'>\n  <div class=\"block\" #fullscreenContainer id=\"fullscreenContainer\">\n    <div fxLayout=\"row\" class=\"menue\">\n      <button mat-mini-fab class=\"menuButton\" (click)=\"showMenu = !showMenu\">\n        <mat-icon>settings</mat-icon>\n      </button>\n      <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"menuBlock\" fxLayoutGap='10px' *ngIf=\"showMenu\">\n        <button *ngIf=\"inFullScreen\" mat-mini-fab (click)=\"exitFullscreen()\">\n          <mat-icon>fullscreen_exit</mat-icon>\n        </button>\n        <button *ngIf=\"!inFullScreen\" mat-mini-fab (click)=\"fullscreen()\">\n          <mat-icon>fullscreen</mat-icon>\n        </button>\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngIf=\"status.wifi\">\n          <p>Wifi: </p> <mat-progress-bar mode=\"determinate\" [value]=\"status.stength\" class=\"largepb status\"></mat-progress-bar>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <p>Battery: </p> <mat-progress-bar mode=\"determinate\" [value]=\"battery\" class=\"largepb status\"></mat-progress-bar>\n          <p style=\"margin-left:3px;\">{{status.battery}}V</p>\n        </div>\n      </div>\n    </div>\n    <img [src]=\"srcImg\" class=\"imagerpi\">\n  </div>\n</div>\n<app-gamepad></app-gamepad>\n","import { Component, OnInit,Inject } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n@Component({\n  selector: 'app-password-dialog',\n  templateUrl: './password-dialog.component.html',\n  styleUrls: ['./password-dialog.component.css']\n})\nexport class PasswordDialogComponent implements OnInit {\n  public password : string;\n  public error : string;\n  public showError : boolean = false;\n  ngOnInit(): void {\n    this.password = \"\";\n    this.showError = false;\n  }\n\n  constructor(private dialogRef: MatDialogRef<PasswordDialogComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  public ok(){\n    if (this.password.length == 0) {\n      this.error = \"Please enter password...\"\n      this.showError = true;\n    } else {\n      this.dialogRef.close({\"password\":this.password});\n    }\n  }\n\n  public cancel(){\n    this.dialogRef.close({});\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n  <span> Enter Password for {{data.ssid}} </span>\n  <mat-form-field>\n   <input matInput type=\"password\" [(ngModel)]=\"password\">\n </mat-form-field>\n <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10%\">\n   <button mat-raised-button color=\"primary\" (click)=\"ok()\">Connect</button>\n   <button mat-raised-button color=\"accent\" (click)=\"cancel()\">Cancel</button>\n </div>\n <p style=\"color:red;\">{{error}}</p>\n</div>\n","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport {SystemStatus, SystemStatusService} from 'share/system-status.service';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit ,OnDestroy{\n  status: SystemStatus;\n  private subs : Array<any>;\n  battery : number;\n  constructor(private systemStatus : SystemStatusService) { }\n  ngOnDestroy(): void {\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.subs = new Array<any>();\n    this.battery = 0;\n    this.subs.push(this.systemStatus.onSystemChangeIP().subscribe(stat => {\n      this.status = stat;\n    }));\n    this.subs.push(this.systemStatus.onsystemChanheInfo().subscribe(stat => {\n      this.status = stat;\n      this.battery = ((stat.battery - 7) * 100)/4.1;\n    }));\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"50px\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n      <mat-icon [ngClass]=\"{'onclass':(status.wifi || status.accessPoint),\n      'offclass':!(status.wifi || status.accessPoint)}\">lens</mat-icon>\n      <p class=\"status\"> {{(status.wifi || status.accessPoint)?\"Connected\":\"Disconnected\"}}</p>\n    </div>\n    <p *ngIf=\"(status.wifi || status.accessPoint)\"> system is {{(status.wifi)?\"Wifi network\":\"Access Point\"}} </p>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"50px\">\n  <p>Used server IP:</p><p> {{status.ip}}</p>\n</div>\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between \" fxLayoutGap=\"30px\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" *ngIf=\"status.wifi\">\n      <p>Wifi Power: </p> <mat-progress-bar mode=\"determinate\" [value]=\"status.stength\" class=\"largepb status\"></mat-progress-bar>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <p>Battery: </p> <mat-progress-bar mode=\"determinate\" [value]=\"battery\" class=\"largepb status\"></mat-progress-bar>\n      <p>{{status.battery}}V</p>\n    </div>\n</div>\n","import { Component, OnInit,NgZone } from '@angular/core';\nimport {RpiConnectorService} from 'share/rpi-connector.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {PasswordDialogComponent} from 'components/password-dialog/password-dialog.component';\nimport { Router }  from '@angular/router';\n\n\n@Component({\n  selector: 'app-wifi-selector',\n  templateUrl: './wifi-selector.component.html',\n  styleUrls: ['./wifi-selector.component.css']\n})\nexport class WifiSelectorComponent implements OnInit {\n  public showSpin: boolean = true;\n  constructor(private rpiService : RpiConnectorService, private dialog : MatDialog,\n  private zone: NgZone, private router: Router) {}\n  public wifiList : Array<ScanData> = new Array<ScanData>();\n\n  private fetchData(){\n    this.showSpin = true;\n    this.rpiService.scanAvailableWifi().subscribe((data:Array<ScanData>)=> {\n      this.wifiList = data;\n      this.showSpin = false;\n    });\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n\n  public refresh() {\n    this.fetchData();\n  }\n\n  public getSignalStrength(quality : string) : string {\n    let vals = quality.split('/');\n    let strength = parseInt(vals[0]);\n    let max = parseInt(vals[1]);\n    let block = max / 6;\n    strength = Math.min(Math.floor(strength / block),5);\n    if (strength == 0){\n      return 'wifi';\n    } else {\n      return 'wifi'.concat(strength.toString());\n    }\n\n  }\n\n  private connectWifi(wifi:ScanData, password:string){\n    this.rpiService.connectToSSID(wifi.ssid,wifi.mac,password).subscribe(r => {\n      setTimeout((()=> {\n        this.zone.run(()=>{\n          this.router.navigate(['choice']);\n        })\n      }).bind(this),100);\n    });\n\n  }\n\n  public selected(wifi : ScanData){\n    console.log(wifi)\n    if (wifi.encrypted){\n      let dialogRef = this.dialog.open(PasswordDialogComponent,{data:{ssid:wifi.ssid}});\n      dialogRef.afterClosed().subscribe((res:any) => {\n        if (res.hasOwnProperty(\"password\")){\n          this.connectWifi(wifi,res.password);\n        }\n      })\n    } else {\n      this.connectWifi(wifi,undefined);\n    }\n  }\n\n}\n\nexport interface ScanData {\n  \"mac\": string;\n  \"ssid\": string;\n  \"quality\": string;\n  \"signal_level\": number;\n  \"encrypted\": boolean;\n  \"Channel\": number;\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\" >\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"title\">\n    <h1 class=\"refresh\"> Select Network </h1>\n    <button mat-icon-button color=\"primary\" (click)=\"refresh()\">\n      <mat-icon class=\"refresh\">refresh</mat-icon>\n    </button>\n  </div>\n  <mat-list class=\"list\">\n    <mat-list-item *ngFor=\"let wifi of wifiList\">\n      <div (click)=\"selected(wifi)\" class=\"line\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <div fxLayoutGap=\"5px\">\n            <mat-icon>wifi</mat-icon>\n            <span class=\"ssidName\">{{wifi.ssid}}</span>\n          </div>\n          <div fxLayoutGap=\"5px\" >\n            <span> {{wifi.signal_level}}db </span>\n            <mat-icon [svgIcon]=\"getSignalStrength(wifi.quality)\"></mat-icon>\n            <mat-icon>{{(wifi.encrypted)?'lock':'lock_open'}}</mat-icon>\n          </div>\n        </div>\n      </div>\n      <mat-divider></mat-divider>\n    </mat-list-item>\n  </mat-list>\n  <mat-spinner *ngIf=\"showSpin\" class=\"spinner\" color=\"primary\"></mat-spinner>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverURL: 'https://192.168.44.1:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ScanData} from 'components/wifi-selector/wifi-selector.component'\nimport { HttpClient}  from '@angular/common/http';\nimport {SystemStatusService} from 'share/system-status.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RpiConnectorService {\n  private rpiURL : string;\n  constructor(private http: HttpClient, private statusServer: SystemStatusService) {\n    this.statusServer.onSystemChangeIP().subscribe(res => {\n      if (res.ip !== undefined){\n        this.rpiURL = \"https://\".concat(res.ip,':8080');\n      }\n    });\n  }\n\n  public getRpiURL() : string {\n    return this.rpiURL;\n  }\n\n  public setRpiUrl(url : string){\n    this.rpiURL = url;\n  }\n\n  public scanAvailableWifi() : Observable<Array<ScanData>> {\n    return this.http.get<Array<ScanData>>(this.rpiURL.concat('/scanWifi'));\n  }\n\n  public connectToSSID(ssid:string,mac:string,password:string){\n    return this.http.post(this.rpiURL.concat('/setWifi'),{\"ssid\":ssid,\"mac\":mac,\"password\":password});\n  }\n\n  public setAccessPoint(){\n    return this.http.get(this.rpiURL.concat('/setAP'),{});\n  }\n\n  public startSession(username: string,password:string) : Observable<any> {\n    return this.http.post(this.rpiURL.concat('/startSession'),\n    {\"user\":username,\"password\":password});\n  }\n\n  public isActiveSession() : Observable<{status:boolean}> {\n    return this.http.get<{status:boolean}>(this.rpiURL.concat('/isActiveSession'));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule }            from '@angular/flex-layout';\nimport { FormsModule,\n\t ReactiveFormsModule }         from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule}          from '@angular/material/input'\nimport {MatProgressBarModule} from '@angular/material/progress-bar'\nimport {MatIconModule}          from '@angular/material/icon'\nimport {MatButtonModule}          from '@angular/material/button'\nimport {MatCardModule}          from '@angular/material/card'\nimport {MatCheckboxModule}          from '@angular/material/checkbox'\nimport {MatToolbarModule}          from '@angular/material/toolbar'\nimport {MatListModule}          from '@angular/material/list'\nimport {MatMenuModule}          from '@angular/material/menu'\nimport {MatSelectModule}          from '@angular/material/select'\nimport {MatDialogModule}          from '@angular/material/dialog'\nimport {MatExpansionModule}          from '@angular/material/expansion'\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n\t\tBrowserAnimationsModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatExpansionModule,\n\t\tMatProgressBarModule,\n\t\tMatSlideToggleModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n\t\tMatProgressBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatToolbarModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n\t\tBrowserAnimationsModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatExpansionModule,\n\t\tMatSlideToggleModule\n  ]\n})\nexport class ShareModule { }\n","/**\n * @Author: maalouf\n * @Date:   2019-09-23T11:47:23+02:00\n * @Last modified by:   maalouf\n * @Last modified time: 2019-09-23T14:09:59+02:00\n */\n\n\n\nimport { Injectable } from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon'\nimport {DomSanitizer} from '@angular/platform-browser'\n@Injectable({\n  providedIn: 'root'\n})\nexport class SvgIconLoadingService {\n  private loadedIcons : Array<string>;\n  constructor(private iconRegistry : MatIconRegistry, private sanitizer : DomSanitizer) {\n    this.loadedIcons = new Array<string>();\n  }\n\n  public loadIcon(name:string,url:string){\n    this.iconRegistry.addSvgIcon(name,url);\n    this.loadedIcons.push(name);\n  }\n\n  public loadIconsArray(icons : Array<string>,folder: string){\n\n    icons.forEach( icon => {\n      let path = folder.concat('/',icon,'.svg');\n      this.loadedIcons.push(icon);\n      this.iconRegistry.addSvgIcon(icon,this.sanitizer.bypassSecurityTrustResourceUrl(path));\n    })\n  }\n\n  public isSvgLoaded(icon: string): boolean {\n    return this.loadedIcons.includes(icon);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs'\nimport { Socket } from 'ngx-socket-io'\nimport { HttpClient}  from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SystemStatusService {\n  private systemStatIP : BehaviorSubject<SystemStatus>;\n  private systemStatInfo : BehaviorSubject<SystemStatus>;\n\n  private status : SystemStatus;\n  private socket : Socket;\n\n  private currentIP: string;\n  public apIP = \"192.168.44.1\";\n\n  constructor(private http: HttpClient) {\n    console.log(\"repwetwet\")\n    this.status = {wifi : false,accessPoint : false,ip : undefined,\n      battery : 0, stength:0, gamePad: false};\n\n    let latest = this.extractURL();\n    this.systemStatIP = new BehaviorSubject<SystemStatus>(this.status);\n    this.systemStatInfo = new BehaviorSubject<SystemStatus>(this.status);\n    if (latest !== undefined && latest !== null){\n      this.currentIP = latest;\n    } else {\n      this.currentIP = this.apIP;\n    }\n    this.checkCurrentIP();\n  }\n\n  private extractURL(): string {\n    let url = location.href;\n    let str = url.indexOf(\"://\");\n    str = str + 3;\n    let end = url.indexOf(\":\",str);\n    return url.substring(str,end);\n  }\n\n  private checkCurrentIP(){\n    if (this.socket !== undefined){\n      this.socket.disconnect();\n      this.socket = undefined;\n    }\n    let url = \"https://\".concat(this.currentIP,':8080/connectStat')\n    this.socket = new Socket({url:url,options:{}})\n    this.socket.fromEvent(\"connect\").subscribe(()=> {\n      console.log(\"connected\");\n      this.status.ip = this.currentIP;\n      this.status.accessPoint = this.currentIP == this.apIP;\n      this.status.wifi = this.currentIP !== this.apIP;\n      this.systemStatIP.next(this.status);\n      if (this.status.wifi) this.controleSignal();\n      this.controlBatt();\n    })\n  }\n\n  private controleSignal(){\n    this.http.get<any>(\"https://\".concat(this.currentIP,':8080/getSignal')).subscribe(res => {\n      this.status.stength = res.signal;\n      this.systemStatInfo.next(this.status);\n      let time = 120000;\n      if (this.status.stength < 50) time = 60000;\n      if (this.status.stength < 20) time = 30000;\n      setTimeout(this.controleSignal.bind(this), time);\n    });\n  }\n\n  private controlBatt(){\n    this.http.get<any>(\"https://\".concat(this.currentIP,':8080/getBattery')).subscribe(res => {\n      this.status.battery = res.batt;\n      this.systemStatInfo.next(this.status);\n      setTimeout(this.controlBatt.bind(this),120000);\n    });\n  }\n\n  setCurrentIp(ip: string){\n    this.currentIP = ip;\n    this.checkCurrentIP();\n  }\n\n  getSystemStatus(): SystemStatus {\n    return this.status;\n  }\n\n  onSystemChangeIP() : BehaviorSubject<SystemStatus>{\n    return this.systemStatIP;\n  }\n\n  onsystemChanheInfo(): BehaviorSubject<SystemStatus> {\n    return this.systemStatInfo;\n  }\n\n  getRobotIp(): string {\n    return this.status.ip;\n  }\n}\n\nexport interface SystemStatus {\n  wifi : boolean;\n  accessPoint : boolean;\n  ip : string;\n  battery : number;\n  stength: number;\n  gamePad: boolean;\n}\n","/* (ignored) */"],"sourceRoot":"webpack:///"}